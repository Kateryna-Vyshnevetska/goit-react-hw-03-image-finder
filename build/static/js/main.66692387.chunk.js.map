{"version":3,"sources":["components/searchbar/Searchbar.js","components/imageGalleryItem/ImageGalleryItem.js","components/imageGallery/ImageGallery.js","components/button/Button.js","components/loader/Spinner.js","components/modal/Modal.js","components/Gallery.js","components/App.js","index.js"],"names":["SearchBar","getValueForSearch","className","onSubmit","evt","preventDefault","form","target","FormData","forEach","value","name","reset","type","autoComplete","autoFocus","placeholder","ImageGalleryItem","img","openModal","onClick","src","alt","ImageGallery","data","map","el","largeImageURL","tags","key","id","webformatURL","Button","newPage","Spinner","color","height","width","React","Component","modalRoot","document","getElementById","Modal","handleKeyDown","e","code","props","onClose","handleBackdropClick","currentTarget","window","addEventListener","this","removeEventListener","createPortal","children","Gallery","state","search","images","page","isLoading","showModal","currentImg","getImages","a","axios","get","setState","prev","hits","console","log","openCloseModal","prevProps","prevState","then","scroll","scrollTo","top","documentElement","scrollHeight","behavior","length","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.66692387.chunk.js","sourcesContent":["import React from 'react';\n\nexport function SearchBar({getValueForSearch}){\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    const form = evt.target;\n    const formData = new FormData(evt.target)\n    formData.forEach((value,name) => {\n      getValueForSearch(value)\n    })\n    form.reset() \n  }\n\n  return (\n    <>\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          type=\"text\"\n          name='search'\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n    </>\n  )\n}","import React from 'react';\n\nexport function ImageGalleryItem({img, openModal}){\n  return(\n    <li onClick={openModal}>\n      <img src={img} alt=\"\" className=\"ImageGalleryItem-image\" />\n    </li>\n  )\n}","import React from 'react';\nimport {ImageGalleryItem} from '../imageGalleryItem/ImageGalleryItem';\n\n\nexport function ImageGallery({data ,openModal}) {\n\n  return(\n    <>\n    <ul className=\"ImageGallery\">\n      {\n        data.map((el) =>   \n         <ImageGalleryItem openModal={()=>openModal(el.largeImageURL, el.tags)} key={el.id} img={el.webformatURL} />)\n      } \n    </ul>\n    </>\n  )\n}\n","import React from 'react';\n\nexport function Button({newPage}){\n  return <button className = 'Button' onClick={newPage}>Load more</button>\n}","import React from 'react';\nimport Loader from 'react-loader-spinner'\n\nexport class Spinner extends React.Component {\n //other logic\n   render() {\n  return(\n   <Loader\n      className=\"loader\"\n      type=\"Hearts\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      // timeout={50000} //3 secs\n   />\n  );\n   }\n}","import React from 'react';\nimport { createPortal } from 'react-dom';\n\n\nconst modalRoot = document.getElementById('modal-root')\n\nexport class Modal extends React.Component{\n\n  componentDidMount(){\n    window.addEventListener('keydown', this.handleKeyDown)\n  }\n\n  componentWillUnmount(){\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleKeyDown = e => {\n    if(e.code === 'Escape'){\n      this.props.onClose()\n    }\n  }\n\n  handleBackdropClick = e => {\n    if(e.target === e.currentTarget){\n      this.props.onClose()\n    }\n  }\n\n  render(){\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">\n          {this.props.children}\n        </div>\n      </div>,modalRoot\n    )\n  }\n}","import React from 'react';\nimport {SearchBar} from './searchbar/Searchbar';\nimport {ImageGallery} from './imageGallery/ImageGallery'\nimport axios from 'axios'\nimport { Button } from './button/Button';\nimport {Spinner} from './loader/Spinner';\nimport {Modal} from './modal/Modal'\n\nexport class Gallery extends React.Component{\n  state={\n    search: '',\n    images:[],\n    page: 1,\n    isLoading: false,\n    showModal: false,\n    currentImg: {}\n  }\n\n  getImages = async (search, page) => {\n    const API_KEY = '18221445-47188b3908a326a287f79417d';\n    try{\n      const images = await axios.get(\n        `https://pixabay.com/api/?q=${search}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n        )\n      this.setState((prev) => ({...prev, images: [...prev.images, ...images.data.hits], isLoading: false}))\n    }catch(error){console.log(error)}\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if(this.state.search === ''){\n      return;\n    }else if(prevState.search !== this.state.search ||\n      prevState.page !== this.state.page){\n      this.getImages(this.state.search, this.state.page)\n      .then(()=> this.scroll())\n    }\n  }\n  \n  scroll(){\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  }\n\n  getValueForSearch = (search) => {\n    this.setState({\n      search:search,\n      images:[],\n      page:1,\n      isLoading:true,\n    })\n  }\n\n  newPage = () => {\n    this.setState((prev)=> ({page: prev.page + 1, isLoading:true,}))\n  }\n\n  openCloseModal = () => {\n    this.setState((prev) => ({showModal : !prev.showModal}))\n  }\n\n  openModal = (src, alt) => {\n    this.setState({currentImg:{src:src, alt:alt}})\n    this.openCloseModal();\n  }\n\n  render(){\n\n    const {isLoading, images, showModal, currentImg} = this.state;\n\n    return(\n      <>\n      {showModal && <Modal onClose={this.openCloseModal}>\n          <img src={currentImg.src} alt={currentImg.alt} />\n        </Modal>}\n\n      <SearchBar getValueForSearch = {this.getValueForSearch}/>\n      \n      <ImageGallery openModal={this.openModal} data={images}/>\n\n      {images.length > 0 && !isLoading && <Button newPage={this.newPage}/>}\n      \n      {isLoading && <Spinner/>}\n      </>\n    )\n  }\n}","import React from 'react';\nimport {Gallery} from './Gallery'\n\nconst App = () => {\n  return (\n    <>\n    <Gallery />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}